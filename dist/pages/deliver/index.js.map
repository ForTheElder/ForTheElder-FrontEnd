{"version":3,"file":"pages/deliver/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://theolder/._src_pages_deliver_index.jsx","webpack://theolder/./src/pages/deliver/index.jsx?b301"],"sourcesContent":["import { Picker,Input,Switch,Textarea, PageContainer } from '@tarojs/components'\r\nimport React, { useState } from 'react'\r\nimport './index.less'\r\nimport { Fetch } from '../../service/fetch'\r\nimport Taro from '@tarojs/taro'\r\n\r\nexport default function Deliver() {\r\n\r\n  const [name,setName] = useState('')\r\n  const [area,setArea] = useState('')\r\n  const [date,setDate] = useState('日期')\r\n  const [start,setStart] = useState('开始');\r\n  const [end,setEnd] = useState('结束');\r\n  const [isCost,setIsCost] = useState(false)\r\n  const [content,setContent] = useState('')\r\n  const [attention,setAttention] = useState('')\r\n  const [showAttention,setShowAttention] = useState(false)\r\n\r\n  const getName = e => {\r\n    setName(e.detail.value);\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const getArea = e => {\r\n    setArea(e.detail.value)\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const changeDate = e => {\r\n    setDate(e.detail.value);\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const changeStart = e => {\r\n    setStart(e.detail.value);\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const changeEnd = e => {\r\n    setEnd(e.detail.value);\r\n    console.log(e.detail.value)\r\n  }\r\n  \r\n  const changeCost = e => {\r\n    setIsCost(e.detail.value)\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const getText = e => {\r\n    setContent(e.detail.value)\r\n    console.log(e.detail.value)\r\n  }\r\n\r\n  const deliver = () =>{\r\n    let newAttention = ''\r\n    if(name === '') {\r\n      newAttention += \"请填写活动名称\\n\"\r\n    }\r\n\r\n    if(area === ''){\r\n      newAttention += \"请选择活动区域\\n\"\r\n    }\r\n\r\n    if(date !== \"日期\" && start !== \"开始\" && end !== \"结束\"){\r\n      let time = new Date();\r\n      let d1 = Date.parse(date)\r\n      let d2 = time.getTime()\r\n      let t1 = time.setHours(start.split(\":\")[0],start.split(\":\")[1])\r\n      let t2 = time.setHours(end.split(\":\")[0],end.split(\":\")[1])\r\n      if(d2 < d1 || t2 <= t1){\r\n        newAttention += \"请选择正确的活动时间\\n\"\r\n      }\r\n    }else {\r\n        newAttention += \"请选择正确的活动时间\\n\"\r\n    }\r\n    \r\n    if(content === ''){\r\n      newAttention += \"请填写活动内容\\n\"\r\n    }\r\n\r\n    if(newAttention !== ''){\r\n      setAttention(newAttention)\r\n      Taro.showToast({\r\n        title: '发布失败',\r\n        icon:'error',\r\n        duration:2000\r\n      })\r\n      return ;\r\n    }\r\n\r\n    let data = {\r\n      title:name,\r\n      address:area,\r\n      beginTime:date + ' ' + start + ':00',\r\n      endTime:date + ' ' + end + ':00',\r\n      isFree:isCost?'0':'1',\r\n      content:content,\r\n    }\r\n    const res = Fetch('/service/service/self/publish',data);\r\n    res.then(\r\n      resdata => {\r\n        if(resdata.msg === '发布成功'){\r\n          Taro.showToast({\r\n            title:'发布成功',\r\n            icon: 'success',\r\n            duration: 2000\r\n          })\r\n        }\r\n        else {\r\n          Taro.showToast({\r\n            title: '发布失败',\r\n            icon:'error',\r\n            duration:2000\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const cancel = () => {\r\n    Taro.navigateBack({\r\n      delta: 1\r\n    })\r\n  }\r\n\r\n  return (\r\n    <view className='wrapper-del'>\r\n      <view className='form'>\r\n        <view className='activity-name'>\r\n          <view>活动名称</view>\r\n          <Input type='text' className='name' onInput={getName} placeholder='请输入活动名称' />\r\n        </view>\r\n        <view className='activity-area'>\r\n          <view>活动区域</view>\r\n          <Input type='text' className='area' onInput={getArea} placeholder='请输入活动地点' />\r\n        </view>\r\n        <view className='activity-time'>\r\n          <view>活动时间</view>\r\n          <Picker mode='date' onChange={changeDate}>\r\n            <view className='date'>\r\n              {date}\r\n            </view>\r\n          </Picker>\r\n          <view>-</view>\r\n          <Picker mode='time' onChange={changeStart}>\r\n            <view className='start'>\r\n              {start}\r\n            </view>\r\n          </Picker>\r\n          <view>-</view>\r\n          <Picker mode='time' onChange={changeEnd} >\r\n            <view className='end'>\r\n              {end}\r\n            </view>\r\n          </Picker>\r\n        </view>\r\n        <view className='activity-cost'>\r\n          <view>是否付费</view>\r\n          <Switch controlled='true' className='cost' onChange={changeCost}></Switch>\r\n        </view>\r\n        <view className='activity-content'>\r\n          <view>活动内容</view>\r\n          <Textarea className='content' onInput={getText} placeholder='请输入活动内容' />\r\n        </view>\r\n      </view>\r\n      <view className='btn'>\r\n        <view className='deliver' onClick={deliver}>发布</view>\r\n        <view className='cancel' onClick={cancel}>取消</view>\r\n      </view>\r\n      <view>\r\n        <PageContainer show={showAttention} position='top'>\r\n          <view>{attention}</view>\r\n        </PageContainer>\r\n      </view>\r\n    </view>\r\n  )\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/deliver/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}